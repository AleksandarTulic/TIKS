{
	"info": {
		"_postman_id": "94525b4f-7452-4e98-9f5d-891a27867d7d",
		"name": "Student",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET ALL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentId).to.eql(1);\r",
							"    pm.expect(responseJson.studentId).to.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql(\"Jelena\");\r",
							"    pm.expect(responseJson.studentName).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentEmail).to.eql(\"jelena@gmail.com\");\r",
							"    pm.expect(responseJson.studentEmail).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"A1\");\r",
							"    pm.expect(responseJson.studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 1,\r\n    \"studentName\" : \"Jelena\",\r\n    \"studentEmail\" : \"jelena@gmail.com\",\r\n    \"studentBranch\" : \"A1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentId).to.eql(1);\r",
							"    pm.expect(responseJson.studentId).to.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql(\"Jelena\");\r",
							"    pm.expect(responseJson.studentName).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentEmail).to.eql(\"jelena@gmail.com\");\r",
							"    pm.expect(responseJson.studentEmail).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"A1\");\r",
							"    pm.expect(responseJson.studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 1 - Check If Implemented",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentId).to.eql(-5);\r",
							"    pm.expect(responseJson.studentId).to.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql(\"Darko\");\r",
							"    pm.expect(responseJson.studentName).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentEmail).to.eql(\"darko@gmail.com\");\r",
							"    pm.expect(responseJson.studentEmail).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"A2\");\r",
							"    pm.expect(responseJson.studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : -5,\r\n    \"studentName\" : \"Darko\",\r\n    \"studentEmail\" : \"darko@gmail.com\",\r\n    \"studentBranch\" : \"A2\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentId).to.eql(2);\r",
							"    pm.expect(responseJson.studentId).to.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql(\"Darko\");\r",
							"    pm.expect(responseJson.studentName).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentEmail).to.eql(\"darko@gmail.com\");\r",
							"    pm.expect(responseJson.studentEmail).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"A2\");\r",
							"    pm.expect(responseJson.studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 2 - Check If Implemented",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentId).to.eql(10);\r",
							"    pm.expect(responseJson.studentId).to.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql(\"Jagoda\");\r",
							"    pm.expect(responseJson.studentName).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentEmail).to.eql(\"jagoda@gmail.com\");\r",
							"    pm.expect(responseJson.studentEmail).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"A3\");\r",
							"    pm.expect(responseJson.studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 10,\r\n    \"studentName\" : \"Jagoda\",\r\n    \"studentEmail\" : \"jagoda@gmail.com\",\r\n    \"studentBranch\" : \"A3\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentId).to.eql(3);\r",
							"    pm.expect(responseJson.studentId).to.a('number');\r",
							"    pm.expect(responseJson.studentName).to.eql(\"Jagoda\");\r",
							"    pm.expect(responseJson.studentName).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentEmail).to.eql(\"jagoda@gmail.com\");\r",
							"    pm.expect(responseJson.studentEmail).to.a(\"string\");\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"A3\");\r",
							"    pm.expect(responseJson.studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 3 - Check If Implemented",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET ALL 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.equal(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 1 - Causing False - ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[0].studentId).to.eql(1);\r",
							"    pm.expect(responseJson[0].studentId).to.a('number');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 1 - Causing False - Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[0].studentName).to.eql(\"Jelena\");\r",
							"    pm.expect(responseJson[0].studentName).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 1 - Causing False - Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[0].studentEmail).to.eql(\"jelena@gmail.com\");\r",
							"    pm.expect(responseJson[0].studentEmail).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 1 - Causing False - Branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[0].studentBranch).to.eql(\"A1\");\r",
							"    pm.expect(responseJson[0].studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 2 - Causing False - ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[1].studentId).to.eql(-5);\r",
							"    pm.expect(responseJson[1].studentId).to.a('number');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 2 - Causing False - Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[1].studentName).to.eql(\"Darko\");\r",
							"    pm.expect(responseJson[1].studentName).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 2 - Causing False - Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[1].studentEmail).to.eql(\"darko@gmail.com\");\r",
							"    pm.expect(responseJson[1].studentEmail).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 2 - Causing False - Branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[1].studentBranch).to.eql(\"A2\");\r",
							"    pm.expect(responseJson[1].studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 3 - Causing False - ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[2].studentId).to.eql(10);\r",
							"    pm.expect(responseJson[2].studentId).to.a('number');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 3 - Causing False - Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[2].studentName).to.eql(\"Jagoda\");\r",
							"    pm.expect(responseJson[2].studentName).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 3 - Causing False - Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[2].studentEmail).to.eql(\"jagoda@gmail.com\");\r",
							"    pm.expect(responseJson[2].studentEmail).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 3 - Causing False - Branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get 1 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[2].studentBranch).to.eql(\"A3\");\r",
							"    pm.expect(responseJson[2].studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD 4 - Testing Branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add test\", function(){\r",
							"    //we are doing this because we know that branch is causing the problem\r",
							"    //and we want to know the exact mistake, or how the problem is created\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"ABC\");\r",
							"    pm.expect(responseJson.studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 4,\r\n    \"studentName\" : \"Stefan\",\r\n    \"studentEmail\" : \"stefan@outlook.com\",\r\n    \"studentBranch\" : \"ABC\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD 5 - Testing Branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add test\", function(){\r",
							"    //we are doing this because we know that branch is causing the problem\r",
							"    //and we want to know the exact mistake, or how the problem is created\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"CBA\");\r",
							"    pm.expect(responseJson.studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 5,\r\n    \"studentName\" : \"Milos\",\r\n    \"studentEmail\" : \"milos@outlook.com\",\r\n    \"studentBranch\" : \"CBA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "ADD 6 - Testing Branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add test\", function(){\r",
							"    //we are doing this because we know that branch is causing the problem\r",
							"    //and we want to know the exact mistake, or how the problem is created\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"steel\");\r",
							"    pm.expect(responseJson.studentBranch).to.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 5,\r\n    \"studentName\" : \"Nikolina\",\r\n    \"studentEmail\" : \"nikolina@outlook.com\",\r\n    \"studentBranch\" : \"steel\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID 4 - Check Exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get By id 4 test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET ALL 2 - Check If Deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.equal(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Check If Deleted Item Exists By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson[0].studentId).to.eql(1);\r",
							"    pm.expect(responseJson[0].studentId).to.a('number');\r",
							"    pm.expect(responseJson[1].studentId).to.eql(2);\r",
							"    pm.expect(responseJson[1].studentId).to.a('number');\r",
							"    pm.expect(responseJson[2].studentId).to.eql(3);\r",
							"    pm.expect(responseJson[2].studentId).to.a('number');\r",
							"    pm.expect(responseJson[3].studentId).to.eql(5);\r",
							"    pm.expect(responseJson[3].studentId).to.a('number');\r",
							"    pm.expect(responseJson[4].studentId).to.eql(6);\r",
							"    pm.expect(responseJson[4].studentId).to.a('number');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID Random - Check Exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get By id 4 test\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/123",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"123"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET BY ID Random - Check Exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get By id 4 test\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/-123",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"-123"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT BY ID 1 - ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentId).to.eql(111);\r",
							"    pm.expect(responseJson.studentId).to.a('number');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 111,\r\n    \"studentName\" : \"Jelena\",\r\n    \"studentEmail\" : \"jelena@gmail.com\",\r\n    \"studentBranch\" : \"A1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT BY ID 1 - Name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentName).to.eql(\"Jelenaa\");\r",
							"    pm.expect(responseJson.studentName).to.a('string');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 1,\r\n    \"studentName\" : \"Jelenaa\",\r\n    \"studentEmail\" : \"jelena@gmail.com\",\r\n    \"studentBranch\" : \"A1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT BY ID 1 - Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentEmail).to.eql(\"jelenaa@gmail.com\");\r",
							"    pm.expect(responseJson.studentEmail).to.a('string');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 1,\r\n    \"studentName\" : \"Jelena\",\r\n    \"studentEmail\" : \"jelenaa@gmail.com\",\r\n    \"studentBranch\" : \"A1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT BY ID 1 - Branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.studentBranch).to.eql(\"A1\");\r",
							"    pm.expect(responseJson.studentBranch).to.a('string');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 1,\r\n    \"studentName\" : \"Jelena\",\r\n    \"studentEmail\" : \"jelena@gmail.com\",\r\n    \"studentBranch\" : \"A1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT False 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put test\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 199,\r\n    \"studentName\" : \"Jelena\",\r\n    \"studentEmail\" : \"jelena@gmail.com\",\r\n    \"studentBranch\" : \"A1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/111",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"111"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT False 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Put test\", function(){\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"studentId\" : 199,\r\n    \"studentName\" : \"Jelena\",\r\n    \"studentEmail\" : \"jelena@gmail.com\",\r\n    \"studentBranch\" : \"A1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/student/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE 6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Delete test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET ALL 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get all test\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.length).to.equal(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/student/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"student",
						""
					]
				}
			},
			"response": []
		}
	]
}